# Tarea 3
## 1. Funcionamiento y lógica de sistema de permisos xv6

### Sistema de Permisos en xv6
Este sistema mejora el control sobre el acceso y modificación de los archivos en xv6 mediante un nuevo mecanismo de permisos. Además, introduce una característica especial que permite marcar un archivo como inmutable, lo que significa que ni su contenido ni sus permisos pueden ser modificados.

### Tipos de Permisos
Se definen los siguientes valores para los permisos de los archivos:

0: Sin permisos, no permite ni lectura ni escritura.
1: Solo lectura.
2: Solo escritura.
3: Lectura y escritura (valor predeterminado para nuevos archivos).
5: Inmutable, lo que implica que el archivo es de solo lectura y sus permisos no pueden ser alterados.

### Cambios de funcionaliento
Apertura de Archivos (sys_open): Si un archivo tiene permisos de solo lectura o está marcado como inmutable, no se permite abrirlo en modo escritura, y el sistema devuelve un error.
Escritura en Archivos (sys_write): Antes de escribir, se verifica que el archivo tenga permisos de escritura. Si no los tiene, la operación falla.
Cambio de Permisos (sys_chmod): Los permisos de un archivo pueden ser modificados, excepto si el archivo está marcado como inmutable. En ese caso, la operación es rechazada con un error.


## 2. Explicación de las Modificaciones Realizadas

1. Adición del Campo de Permisos al inode
Se agregó un nuevo campo denominado permissions a la estructura inode dentro del archivo kernel/fs.h.
Este campo almacena el estado de los permisos del archivo y se inicializa con el valor 3 (lectura y escritura) al crear un nuevo archivo.

2. Validaciones Agregadas en las Operaciones con Archivos
sys_read: No se realizaron cambios significativos, ya que leer únicamente requiere permisos de lectura.
sys_open: Se implementó una validación para impedir abrir archivos en modo escritura si estos tienen permisos de solo lectura o son inmutables.
sys_write: Se añadió una verificación que asegura que solo se puede escribir en un archivo si tiene permisos de escritura.

3. Nueva Llamada al Sistema: chmod
Se introdujo una nueva función del sistema, llamada sys_chmod, esta permite a los usuarios cambiar los permisos de los archivos. Su funcionamiento es el siguiente:

-Comprobación de la existencia del archivo: Si el archivo no existe, se devuelve un error.
-Verificación del estado de inmutabilidad: Si el archivo es inmutable, no se permite modificar sus permisos y se genera un error.
-Actualización de permisos: Si pasa las validaciones anteriores, se actualiza el campo permissions del archivo con el nuevo valor.

4. Registro de la Nueva Llamada chmod
Para que el sistema reconozca la función sys_chmod, se realizaron modificaciones en los siguientes archivos:

kernel/syscall.h: Se añadió la definición de SYS_chmod.
kernel/syscall.c: Se incluyó la función sys_chmod en la tabla de llamadas al sistema.
usys.pl: Se actualizó este archivo para generar automáticamente el código necesario para la nueva llamada al sistema.

5. Pruebas Implementadas (user/permtest.c)
Se creó un programa de prueba para verificar el correcto funcionamiento de las nuevas funcionalidades. Este programa realiza los siguientes pasos:

Crear un archivo y verificar que tiene permisos de lectura y escritura por defecto.
a. Cambiar los permisos a solo lectura y comprobar que no se puede escribir en el archivo.
b. Cambiar los permisos nuevamente a lectura/escritura y verificar que ahora sí se puede escribir.
c. Cambiar los permisos a inmutable y verificar que:
    -    No es posible modificar el contenido del archivo.
    -    No es posible modificar los permisos del archivo.

## 3. Dificultades Encontradas y Soluciones Implementadas

- Compatibilidad con Funciones Existentes: Las funciones originales como sys_open y sys_write no contemplaban la gestión de permisos.
Solución: Se añadieron las validaciones correspondientes para verificar los permisos antes de ejecutar estas operaciones.

- Conflictos con Archivos de Encabezado: Durante la implementación, surgieron problemas con definiciones duplicadas en estructuras como spinlock e inode.
Solución: Se revisaron y ajustaron las inclusiones de encabezados para evitar duplicados y conflictos.

- Fallos en Pruebas con Archivos Inmutables: Las pruebas fallaban al intentar cambiar los permisos de un archivo marcado como inmutable.
Solución: Se mejoraron las validaciones en sys_chmod para manejar correctamente estos casos.

- Problemas al Registrar la Nueva Llamada chmod: Inicialmente, hubo dificultades para que el sistema reconociera correctamente la función chmod.
Solución: Se revisaron los archivos relacionados con llamadas al sistema (syscall.h, syscall.c y usys.pl) para asegurarse de que la configuración era correcta.


